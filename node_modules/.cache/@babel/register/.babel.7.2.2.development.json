{
  "{\"sourceRoot\":\"/home/deniz/Desktop/Workspace/sample_node_project/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/deniz/Desktop/Workspace/sample_node_project\",\"filename\":\"/home/deniz/Desktop/Workspace/sample_node_project/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deniz/Desktop/Workspace/sample_node_project\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deniz/Desktop/Workspace/sample_node_project/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/deniz/Desktop/Workspace/sample_node_project",
      "filename": "/home/deniz/Desktop/Workspace/sample_node_project/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deniz/Desktop/Workspace/sample_node_project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deniz/Desktop/Workspace/sample_node_project/src/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deniz/Desktop/Workspace/sample_node_project/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deniz/Desktop/Workspace/sample_node_project/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _genres = _interopRequireDefault(require(\"./routes/genres\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar app = (0, _express.default)();\napp.use((0, _express.json)());\napp.use(\"/api/genres\", _genres.default);\nvar port = process.env.PORT || 3000;\napp.listen(port, function () {\n  return console.log(\"Server is listening on port \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJnZW5yZXMiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7Ozs7QUFDQSxJQUFNQSxHQUFHLEdBQUcsdUJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsb0JBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QkMsZUFBdkI7QUFFQSxJQUFJQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQS9CO0FBQ0FOLEdBQUcsQ0FBQ08sTUFBSixDQUFXSixJQUFYLEVBQWlCO0FBQUEsU0FBTUssT0FBTyxDQUFDQyxHQUFSLHVDQUEyQ04sSUFBM0MsRUFBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2Rlbml6L0Rlc2t0b3AvV29ya3NwYWNlL3NhbXBsZV9ub2RlX3Byb2plY3Qvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MsIHsganNvbiB9IGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgZ2VucmVzIGZyb20gXCIuL3JvdXRlcy9nZW5yZXNcIjtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShqc29uKCkpO1xuYXBwLnVzZShcIi9hcGkvZ2VucmVzXCIsIGdlbnJlcyk7XG5cbmxldCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgU2VydmVyIGlzIGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH1gKSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "genres",
        "port",
        "process",
        "env",
        "PORT",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;AACA,IAAMA,GAAG,GAAG,uBAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,oBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuBC,eAAvB;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B;AACAN,GAAG,CAACO,MAAJ,CAAWJ,IAAX,EAAiB;AAAA,SAAMK,OAAO,CAACC,GAAR,uCAA2CN,IAA3C,EAAN;AAAA,CAAjB",
      "sourceRoot": "/home/deniz/Desktop/Workspace/sample_node_project/src",
      "sourcesContent": [
        "import express, { json } from \"express\";\nimport genres from \"./routes/genres\";\nconst app = express();\n\napp.use(json());\napp.use(\"/api/genres\", genres);\n\nlet port = process.env.PORT || 3000;\napp.listen(port, () => console.log(`Server is listening on port ${port}`));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548264579787
  },
  "{\"sourceRoot\":\"/home/deniz/Desktop/Workspace/sample_node_project/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/deniz/Desktop/Workspace/sample_node_project\",\"filename\":\"/home/deniz/Desktop/Workspace/sample_node_project/src/routes/genres.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deniz/Desktop/Workspace/sample_node_project\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deniz/Desktop/Workspace/sample_node_project/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/deniz/Desktop/Workspace/sample_node_project",
      "filename": "/home/deniz/Desktop/Workspace/sample_node_project/src/routes/genres.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deniz/Desktop/Workspace/sample_node_project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deniz/Desktop/Workspace/sample_node_project/src/routes/genres.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deniz/Desktop/Workspace/sample_node_project/src/routes/genres.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deniz/Desktop/Workspace/sample_node_project/src/routes",
        "sourceFileName": "genres.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _joi = _interopRequireDefault(require(\"joi\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express.default.Router();\n\nvar genres = [{\n  id: 1,\n  name: 'Horror'\n}, {\n  id: 2,\n  name: 'Comedy'\n}, {\n  id: 3,\n  name: 'Thriller'\n}, {\n  id: 4,\n  name: 'Drama'\n}];\nrouter.get('/', function (req, res) {\n  res.send(genres);\n});\nrouter.get('/:id', function (req, res) {\n  var genre = genres.find(function (c) {\n    return c.id === parseInt(req.params.id);\n  });\n  if (!genre) return res.status(404).send(\"Parameter with id \".concat(req.params.id, \" can not found\"));\n  res.send(genre);\n});\nrouter.post('/', function (req, res) {\n  var _validateRequest = validateRequest(req.body),\n      error = _validateRequest.error;\n\n  if (error) return res.status(400).send(error);\n  var genre = {\n    id: genres.length + 1,\n    name: req.body.name\n  };\n  genres.push(genre);\n  res.send(genre);\n});\nrouter.put('/:id', function (req, res) {\n  var genre = genres.find(function (c) {\n    return c.id === parseInt(req.params.id);\n  });\n  if (!genre) return res.status(404).send(\"Parameter with id \".concat(req.params.id, \" can not found\"));\n\n  var _validateRequest2 = validateRequest(req.body),\n      error = _validateRequest2.error;\n\n  if (error) return res.status(400).send(error);\n  genre.name = req.body.name;\n  res.send(genre);\n});\nrouter.delete('/:id', function (req, res) {\n  var genre = genres.find(function (c) {\n    return c.id === parseInt(req.params.id);\n  });\n  if (!genre) return res.status(404).send(\"Parameter with id \".concat(req.params.id, \" can not found\"));\n  var index = genres.indexOf(genre);\n  genres.splice(index, 1);\n  res.send(genre);\n});\n\nfunction validateRequest(genre) {\n  var schema = {\n    name: _joi.default.string().min(3).required()\n  };\n  return _joi.default.validate(genre, schema);\n}\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbnJlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2VucmVzIiwiaWQiLCJuYW1lIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsImdlbnJlIiwiZmluZCIsImMiLCJwYXJzZUludCIsInBhcmFtcyIsInN0YXR1cyIsInBvc3QiLCJ2YWxpZGF0ZVJlcXVlc3QiLCJib2R5IiwiZXJyb3IiLCJsZW5ndGgiLCJwdXNoIiwicHV0IiwiZGVsZXRlIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwic2NoZW1hIiwiSm9pIiwic3RyaW5nIiwibWluIiwicmVxdWlyZWQiLCJ2YWxpZGF0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7O0FBRUEsSUFBSUMsTUFBTSxHQUFHLENBQ1g7QUFBRUMsRUFBQUEsRUFBRSxFQUFFLENBQU47QUFBU0MsRUFBQUEsSUFBSSxFQUFFO0FBQWYsQ0FEVyxFQUVYO0FBQUVELEVBQUFBLEVBQUUsRUFBRSxDQUFOO0FBQVNDLEVBQUFBLElBQUksRUFBRTtBQUFmLENBRlcsRUFHWDtBQUFFRCxFQUFBQSxFQUFFLEVBQUUsQ0FBTjtBQUFTQyxFQUFBQSxJQUFJLEVBQUU7QUFBZixDQUhXLEVBSVg7QUFBRUQsRUFBQUEsRUFBRSxFQUFFLENBQU47QUFBU0MsRUFBQUEsSUFBSSxFQUFFO0FBQWYsQ0FKVyxDQUFiO0FBT0FMLE1BQU0sQ0FBQ00sR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDNUJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTTixNQUFUO0FBQ0QsQ0FGRDtBQUlBSCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxNQUFYLEVBQW1CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CLE1BQU1FLEtBQUssR0FBR1AsTUFBTSxDQUFD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Q0FURDs7QUFXQSxTQUFTTyxlQUFULENBQXlCUCxLQUF6QixFQUFnQztBQUM5QixNQUFNaUIsTUFBTSxHQUFHO0FBQ2J0QixJQUFBQSxJQUFJLEVBQUV1QixhQUFJQyxNQUFKLEdBQ0hDLEdBREcsQ0FDQyxDQURELEVBRUhDLFFBRkc7QUFETyxHQUFmO0FBS0EsU0FBT0gsYUFBSUksUUFBSixDQUFhdEIsS0FBYixFQUFvQmlCLE1BQXBCLENBQVA7QUFDRDs7QUFFRE0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCbEMsTUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvZGVuaXovRGVza3RvcC9Xb3Jrc3BhY2Uvc2FtcGxlX25vZGVfcHJvamVjdC9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEpvaSBmcm9tICdqb2knO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5sZXQgZ2VucmVzID0gW1xuICB7IGlkOiAxLCBuYW1lOiAnSG9ycm9yJyB9LFxuICB7IGlkOiAyLCBuYW1lOiAnQ29tZWR5JyB9LFxuICB7IGlkOiAzLCBuYW1lOiAnVGhyaWxsZXInIH0sXG4gIHsgaWQ6IDQsIG5hbWU6ICdEcmFtYScgfVxuXTtcblxucm91dGVyLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZChnZW5yZXMpO1xufSk7XG5cbnJvdXRlci5nZXQoJy86aWQnLCAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgZ2VucmUgPSBnZW5yZXMuZmluZChjID0+IGMuaWQgPT09IHBhcnNlSW50KHJlcS5wYXJhbXMuaWQpKTtcbiAgaWYgKCFnZW5yZSlcbiAgICByZXR1cm4gcmVzXG4gICAgICAuc3RhdHVzKDQwNClcbiAgICAgIC5zZW5kKGBQYXJhbWV0ZXIgd2l0aCBpZCAke3JlcS5wYXJhbXMuaWR9IGNhbiBub3QgZm91bmRgKTtcbiAgcmVzLnNlbmQoZ2VucmUpO1xufSk7XG5cbnJvdXRlci5wb3N0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gIGxldCB7IGVycm9yIH0gPSB2YWxpZGF0ZVJlcXVlc3QocmVxLmJvZHkpO1xuICBpZiAoZXJyb3IpIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZChlcnJvcik7XG4gIGNvbnN0IGdlbnJlID0geyBpZDogZ2VucmVzLmxlbmd0aCArIDEsIG5hbWU6IHJlcS5ib2R5Lm5hbWUgfTtcbiAgZ2VucmVzLnB1c2goZ2VucmUpO1xuICByZXMuc2VuZChnZW5yZSk7XG59KTtcblxucm91dGVyLnB1dCgnLzppZCcsIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBnZW5yZSA9IGdlbnJlcy5maW5kKGMgPT4gYy5pZCA9PT0gcGFyc2VJbnQocmVxLnBhcmFtcy5pZCkpO1xuICBpZiAoIWdlbnJlKVxuICAgIHJldHVybiByZXNcbiAgICAgIC5zdGF0dXMoNDA0KVxuICAgICAgLnNlbmQoYFBhcmFtZXRlciB3aXRoIGlkICR7cmVxLnBhcmFtcy5pZH0gY2FuIG5vdCBmb3VuZGApO1xuICBsZXQgeyBlcnJvciB9ID0gdmFsaWRhdGVSZXF1ZXN0KHJlcS5ib2R5KTtcbiAgaWYgKGVycm9yKSByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoZXJyb3IpO1xuICBnZW5yZS5uYW1lID0gcmVxLmJvZHkubmFtZTtcbiAgcmVzLnNlbmQoZ2VucmUpO1xufSk7XG5cbnJvdXRlci5kZWxldGUoJy86aWQnLCAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgZ2VucmUgPSBnZW5yZXMuZmluZChjID0+IGMuaWQgPT09IHBhcnNlSW50KHJlcS5wYXJhbXMuaWQpKTtcbiAgaWYgKCFnZW5yZSlcbiAgICByZXR1cm4gcmVzXG4gICAgICAuc3RhdHVzKDQwNClcbiAgICAgIC5zZW5kKGBQYXJhbWV0ZXIgd2l0aCBpZCAke3JlcS5wYXJhbXMuaWR9IGNhbiBub3QgZm91bmRgKTtcbiAgY29uc3QgaW5kZXggPSBnZW5yZXMuaW5kZXhPZihnZW5yZSk7XG4gIGdlbnJlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICByZXMuc2VuZChnZW5yZSk7XG59KTtcblxuZnVuY3Rpb24gdmFsaWRhdGVSZXF1ZXN0KGdlbnJlKSB7XG4gIGNvbnN0IHNjaGVtYSA9IHtcbiAgICBuYW1lOiBKb2kuc3RyaW5nKClcbiAgICAgIC5taW4oMylcbiAgICAgIC5yZXF1aXJlZCgpXG4gIH07XG4gIHJldHVybiBKb2kudmFsaWRhdGUoZ2VucmUsIHNjaGVtYSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "genres.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "genres",
        "id",
        "name",
        "get",
        "req",
        "res",
        "send",
        "genre",
        "find",
        "c",
        "parseInt",
        "params",
        "status",
        "post",
        "validateRequest",
        "body",
        "error",
        "length",
        "push",
        "put",
        "delete",
        "index",
        "indexOf",
        "splice",
        "schema",
        "Joi",
        "string",
        "min",
        "required",
        "validate",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/deniz/Desktop/Workspace/sample_node_project/src/routes",
      "sourcesContent": [
        "import Joi from 'joi';\nimport express from 'express';\nconst router = express.Router();\n\nlet genres = [\n  { id: 1, name: 'Horror' },\n  { id: 2, name: 'Comedy' },\n  { id: 3, name: 'Thriller' },\n  { id: 4, name: 'Drama' }\n];\n\nrouter.get('/', (req, res) => {\n  res.send(genres);\n});\n\nrouter.get('/:id', (req, res) => {\n  const genre = genres.find(c => c.id === parseInt(req.params.id));\n  if (!genre)\n    return res\n      .status(404)\n      .send(`Parameter with id ${req.params.id} can not found`);\n  res.send(genre);\n});\n\nrouter.post('/', (req, res) => {\n  let { error } = validateRequest(req.body);\n  if (error) return res.status(400).send(error);\n  const genre = { id: genres.length + 1, name: req.body.name };\n  genres.push(genre);\n  res.send(genre);\n});\n\nrouter.put('/:id', (req, res) => {\n  const genre = genres.find(c => c.id === parseInt(req.params.id));\n  if (!genre)\n    return res\n      .status(404)\n      .send(`Parameter with id ${req.params.id} can not found`);\n  let { error } = validateRequest(req.body);\n  if (error) return res.status(400).send(error);\n  genre.name = req.body.name;\n  res.send(genre);\n});\n\nrouter.delete('/:id', (req, res) => {\n  const genre = genres.find(c => c.id === parseInt(req.params.id));\n  if (!genre)\n    return res\n      .status(404)\n      .send(`Parameter with id ${req.params.id} can not found`);\n  const index = genres.indexOf(genre);\n  genres.splice(index, 1);\n  res.send(genre);\n});\n\nfunction validateRequest(genre) {\n  const schema = {\n    name: Joi.string()\n      .min(3)\n      .required()\n  };\n  return Joi.validate(genre, schema);\n}\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1548262812662
  }
}